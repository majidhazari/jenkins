name: jenkins-stack

networks:
  jenkins:
    driver: bridge

volumes:
  jenkins-data:
    # jenkins-docker-certs:


services:
  # # Docker daemon for builds (Docker-in-Docker with TLS)
  # docker-tls:
  #   image: docker:28-dind
  #   container_name: jenkins-dind-tls
  #   privileged: true
  #   restart: unless-stopped
  #   networks: [jenkins]
  #   environment:
  #     - DOCKER_TLS_CERTDIR=/certs
  #   volumes:
  #     - jenkins-docker-certs:/certs/client
  #     - jenkins-data:/var/jenkins_home
  #   #ports:
  #   #  - "2376:2376"   # optional: expose if you want to debug
  #   command: ["--storage-driver=overlay2"]

  docker:
    image: docker:28-dind
    container_name: jenkins-dind
    privileged: true
    restart: unless-stopped
    networks: [ jenkins ]
    environment:
      - DOCKER_TLS_CERTDIR= # disable TLS â†’ daemon will use 2375
    command:
      - "--host=tcp://0.0.0.0:2375" # listen on TCP (no TLS)
      # - "--host=unix:///var/run/docker.sock"
      - "--tls=false" # avoid the 15s non-TLS delay
      - "--storage-driver=overlay2"
    #ports:
    #  - "2375:2375"                   # optional: expose for troubleshooting

    # Jenkins controller with Docker CLI + docker-workflow plugin
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    image: myjenkins:lts-docker
    container_name: jenkins
    depends_on:
      - docker
    restart: unless-stopped
    networks: [ jenkins ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
      #- DOCKER_CERT_PATH=/certs/client
      #- DOCKER_TLS_VERIFY=1
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc.yaml # JCasC entrypoint
    ports:
      - "8080:8080" # Jenkins UI
    # - "50000:50000"  # inbound agents (optional)
    volumes:
      - jenkins-data:/var/jenkins_home
      #- jenkins-docker-certs:/certs/client:ro
      - ./casc.yaml:/var/jenkins_home/casc.yaml:ro

  dind-janitor:
    # image: docker:28-cli
    build:
      context: .
      dockerfile_inline: |
        FROM docker:28-cli
        COPY janitor.sh /usr/local/bin/janitor.sh
        RUN chmod +x /usr/local/bin/janitor.sh
        ENTRYPOINT ["/usr/local/bin/janitor.sh"]

    image: myjanitor:28-cli
    container_name: jenkins-dind-janitor
    restart: unless-stopped
    networks: [ jenkins ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - CAP_GB=30 # 30 GB cap
      - PRUNE_STEP_HOURS=168 # prune images older than 7d per step
      - SLEEP_SECONDS=3600 # run hourly
      - PROTECT_LABEL=storage=do_not_delete # optional keep-label
    # volumes:
    #   - ./janitor.sh:/usr/local/bin/janitor.sh:ro
    # entrypoint: [ "/bin/sh", "-c" ]
    # command: [ "chmod +x /usr/local/bin/janitor.sh && /usr/local/bin/janitor.sh" ]
